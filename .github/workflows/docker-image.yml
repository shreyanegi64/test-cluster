name: Deploy Streamlit App

on:
  push:
    branches:
      - main # or your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME_DATAOS }} -p ${{ secrets.DOCKER_PASSWORD_DATAOS }}

    - name: Pull Docker image
      run: docker pull rubiklabs/dataos-ctl:2.10.9-dev

    - name: Run Docker container
      run: docker run rubiklabs/dataos-ctl:2.10.9-dev

    - name: Find YAML file
      run: |
        file=$(find . -name "cluster.yaml" -printf "%P\n" -quit)
        echo "Found file: $file"
        echo "file=$file" >> $GITHUB_ENV

    - name: Get commit author
      id: get_author
      run: |
        commit_author=$(git log -1 --format='%an')
        echo "Commit author is $commit_author"
        echo "author=$commit_author" >> $GITHUB_ENV

    - name: Set API Key and User ID
      id: set_env
      run: |
        if [ "${{ env.author }}" == "shreya negi" ]; then
          echo "USER_ID=${{ secrets.SHREYA_USERNAME }}" >> $GITHUB_ENV
          echo "API_KEY=${{ secrets.SHREYA_API_KEY }}" >> $GITHUB_ENV
        elif [ "${{ env.author }}" == "itsyourdj" ]; then
          echo "USER_ID=${{ secrets.DEEPAK_USERNAME }}" >> $GITHUB_ENV
          echo "API_KEY=${{ secrets.DEEPAK_API_KEY }}" >> $GITHUB_ENV
        elif [ "${{ env.author }}" == "khushi" ]; then
          echo "USER_ID=${{ secrets.KHUSHI_USERNAME }}" >> $GITHUB_ENV
          echo "API_KEY=${{ secrets.DEEPAK_API_KEY }}" >> $GITHUB_ENV
        else
          echo "Unknown author. Exiting."
          exit 1
        fi

    - name: Delete resources
      id: delete-resources
      run: |
        echo "Deleting resources using file: ${{ env.file }}"
        docker run --rm -i \
          -v $GITHUB_WORKSPACE/.dataos:/dataos \
          -v $GITHUB_WORKSPACE:/jobsfolder \
          -e DATAOS_CONFIG_DIRECTORY=/dataos \
          -e USER_ID=${{ env.USER_ID }} \
          -e DATAOS_PRIME_APIKEY=${{ secrets.DATAOS_PRIME_APIKEY }} \
          -e LICENSE_KEY=${{ secrets.LICENSE_KEY }} \
          -e LICENSE_ORGANIZATION_ID=${{ secrets.LICENSE_ORGANIZATION_ID }} \
          -e DATAOS_FQDN=liberal-donkey.dataos.app \
          -e APIKEY=${{ env.API_KEY }} \
          rubiklabs/dataos-ctl:2.10.9-dev delete -f /jobsfolder/${{ env.file }}
      continue-on-error: true
      env:
        USER_ID: ${{ env.USER_ID }}
        API_KEY: ${{ env.API_KEY }}

    - name: Check delete result
      if: steps.delete-resources.outcome == 'failure'
      run: |
        echo "Initial delete failed. Waiting for 30 seconds and retrying..."
        sleep 30
        echo "Retrying delete..."
        docker run --rm -i \
          -v $GITHUB_WORKSPACE/.dataos:/dataos \
          -v $GITHUB_WORKSPACE:/jobsfolder \
          -e DATAOS_CONFIG_DIRECTORY=/dataos \
          -e USER_ID=${{ env.USER_ID }} \
          -e DATAOS_PRIME_APIKEY=${{ secrets.DATAOS_PRIME_APIKEY }} \
          -e LICENSE_KEY=${{ secrets.LICENSE_KEY }} \
          -e LICENSE_ORGANIZATION_ID=${{ secrets.LICENSE_ORGANIZATION_ID }} \
          -e DATAOS_FQDN=liberal-donkey.dataos.app \
          -e APIKEY=${{ env.API_KEY }} \
          rubiklabs/dataos-ctl:2.10.9-dev delete -f /jobsfolder/${{ env.file }}
      env:
        USER_ID: ${{ env.USER_ID }}
        API_KEY: ${{ env.API_KEY }}

    - name: Apply configuration
      run: |
        docker run --rm -i \
          -v $GITHUB_WORKSPACE/.dataos:/dataos \
          -v $GITHUB_WORKSPACE:/jobsfolder \
          -e DATAOS_CONFIG_DIRECTORY=/dataos \
          -e USER_ID=${{ env.USER_ID }} \
          -e DATAOS_PRIME_APIKEY=${{ secrets.DATAOS_PRIME_APIKEY }} \
          -e LICENSE_KEY=${{ secrets.LICENSE_KEY }} \
          -e LICENSE_ORGANIZATION_ID=${{ secrets.LICENSE_ORGANIZATION_ID }} \
          -e DATAOS_FQDN=liberal-donkey.dataos.app \
          -e APIKEY=${{ env.API_KEY }} \
          rubiklabs/dataos-ctl:2.10.9-dev apply -f /jobsfolder/${{ env.file }} -l

      env:
        USER_ID: ${{ env.USER_ID }}
        API_KEY: ${{ env.API_KEY }}

    - name: Apply configuration without linter
      run: |
        docker run --rm -i \
          -v $GITHUB_WORKSPACE/.dataos:/dataos \
          -v $GITHUB_WORKSPACE:/jobsfolder \
          -e DATAOS_CONFIG_DIRECTORY=/dataos \
          -e USER_ID=${{ env.USER_ID }} \
          -e DATAOS_PRIME_APIKEY=${{ secrets.DATAOS_PRIME_APIKEY }} \
          -e LICENSE_KEY=${{ secrets.LICENSE_KEY }} \
          -e LICENSE_ORGANIZATION_ID=${{ secrets.LICENSE_ORGANIZATION_ID }} \
          -e DATAOS_FQDN=liberal-donkey.dataos.app \
          -e APIKEY=${{ env.API_KEY }} \
          rubiklabs/dataos-ctl:2.10.9-dev apply -f /jobsfolder/${{ env.file }}
      env:
        USER_ID: ${{ env.USER_ID }}
        API_KEY: ${{ env.API_KEY }}
      
    env:
      DATAOS_PRIME_APIKEY: ${{ secrets.DATAOS_PRIME_APIKEY }}
      LICENSE_KEY: ${{ secrets.LICENSE_KEY }}
      LICENSE_ORGANIZATION_ID: ${{ secrets.LICENSE_ORGANIZATION_ID }}
      DOCKER_USERNAME_DATAOS: ${{ secrets.DOCKER_USERNAME_DATAOS }}
      DOCKER_PASSWORD_DATAOS: ${{ secrets.DOCKER_PASSWORD_DATAOS }}
